PARSER_BEGIN(Grammar)


public class Grammar {

  public static void main(String args[]) throws ParseException {
    Grammar parser = new Grammar(System.in);
    parser.Input();
  }

}

PARSER_END(Grammar)


TOKEN : {<#skip: " "|"\t"|"\r"|"\n">}
TOKEN : {<element: <img> | <header> | <para> | <url> >}
TOKEN : {<create:"ADD"<skip><element>>}
TOKEN : {<img: "IMAGE"<skip>"WITH"<skip>"SOURCE"<skip><quote><sentence> <quote><skip>>}
TOKEN : {<#header: "HEADING"<skip><decorated_text><skip>>}
TOKEN : {<#para: "PARAGRAPH"<skip><decorated_text><skip>>}
TOKEN : {<#url: "LINK"<skip><decorated_url><skip>>}
TOKEN : {<#decorated_url:  <text> | <link>   (<skip> "AND" <skip> <text> | <link>  ) >}
TOKEN : {<#decorated_text:  <text> | <color> | <font>   (<skip> "AND" <skip> <text> | <color> | <font> )* >}
TOKEN : {<#text: "WITH"<skip> "TEXT" <skip> <quote> <sentence> <quote>>}
TOKEN : {<#color: "WITH"<skip> "COLOR" <skip> <quote> <sentence> <quote>>}
TOKEN : {<#font: "WITH"<skip> "FONT" <skip> <quote> <sentence> <quote>>}
TOKEN : {<#link: "WITH"<skip> "LINK" <skip> "http"|"https""://" <skip> <quote> <sentence> <quote>>}
TOKEN: {<#quote:  "\"" >}
TOKEN: {<#alphanumeric: ([ "0"-"9" , "a"-"z" , "A"-"Z" , "/" , ":" , "." , "_"]) >}
TOKEN: {<#sentence:  (<alphanumeric> | " ")+ >}

/** Root production. */
void Input():
{
 Token elem;
}
{
elem = <create>
{
    if(elem.toString().contains("IMAGE")){
         String src;
         String result = ">>> ";
        src = elem.toString().split("SOURCE ")[1].split("\n")[0];
        result += "<img src=" + src + "/>";
        System.out.println(result);
    }
    else if(elem.toString().contains("HEADING")){
            String text = null, color = null, font = null, result;
                if(elem.toString().contains("AND ")){
                    String[] arr = elem.toString().split(" AND ");
                    for(var substring : arr){
                        if(substring.contains("TEXT"))
                            text = arr[0].split(" TEXT ")[1];
                        else if(substring.contains("COLOR"))
                            color = arr[0].split(" COLOR ")[1];
                        else if(substring.contains("FONT"))
                            font = arr[0].split(" FONT ")[1];
                    }
                }
                result = "<h1 style=\"";
                if(color != null)
                    result+= "color:"+color+";";
                if(font != null)
                    result+="font-family:"+font+";\"";
                if(text != null)
                    result+= ">"+text+"<\\h1>";
                System.out.println(result);
    }
    else if(elem.toString().contains("PARAGRAPH")){
        String text = null, color = null, font = null, result;
            if(elem.toString().contains("AND WITH")){
                String[] arr = elem.toString().split(" AND WITH ");
                for(var substring : arr){
                    if(substring.contains("TEXT"))
                        text = arr[0].split(" TEXT ")[1];
                    else if(substring.contains("COLOR"))
                        color = arr[0].split(" COLOR ")[1];
                    else if(substring.contains("FONT"))
                        font = arr[0].split(" FONT ")[1];
                }
            }
            result = "<p style=\"";
            if(color != null)
                result+= "color:"+color+";";
            if(font != null)
                result+="font-family:"+font+";\"";
            if(text != null)
                result+= ">"+text+"<\\p>";
            System.out.println(result);
    }
    else if(elem.toString().contains("LINK")){
            String text = null, link = null, result;
                if(elem.toString().contains("AND WITH")){
                    String[] arr = elem.toString().split(" AND WITH ");
                    for(var substring : arr){
                        if(substring.contains("TEXT"))
                            text = arr[0].split(" TEXT ")[1];
                        else if(substring.contains("LINK"))
                            link = arr[0].split(" LINK ")[1];
                    }
                }
                result = "<a href=\"";
                if(link != null)
                    result+= link + ">";
                if(text != null)
                    result+= text + "<//a>";
                System.out.println(result);
    }


}

}